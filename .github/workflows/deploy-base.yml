name: Deploy Base Infrastructure

on:
  workflow_dispatch:
    inputs:
      useGalleryImages:
        description: 'Set true to reference existing gallery versions (ensure images exist).'
        required: false
        default: 'false'
      enableGhPublicIp:
        description: 'Temporary public IP for GitHub runner VM (dev only).'
        required: false
        default: 'false'

permissions:
  id-token: write
  contents: read

env:
  ORG: acme
  ENV: dev
  LOCATION: swedencentral
  LOC: sec
  UNIQUE_SUFFIX: a1b2
  RESOURCE_GROUP: rg-acme-dev-sec

jobs:
  deploy:
    name: Deploy Base Infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Resource Group (idempotent)
        run: |
          az group create -n "$RESOURCE_GROUP" -l "$LOCATION" --tags system=build-agents || true

      - name: Validate Bicep Parameters
        run: |
          echo "ORG=$ORG ENV=$ENV LOC=$LOC UNIQUE_SUFFIX=$UNIQUE_SUFFIX" | sed 's/\r//' 

      - name: Deploy Base (what-if)
        run: |
          az deployment group what-if \
            -g "$RESOURCE_GROUP" \
            -f infra/base/main.bicep \
            -p org=$ORG env=$ENV location=$LOCATION loc=$LOC uniqueSuffix=$UNIQUE_SUFFIX \
               adminUsername=agentadmin adminSshPublicKey='${{ secrets.ADMIN_SSH_PUBLIC_KEY }}' \
               adminPassword='${{ secrets.ADMIN_PASSWORD }}' \
               useGalleryImages=${{ github.event.inputs.useGalleryImages || 'false' }} \
               enableGhPublicIp=${{ github.event.inputs.enableGhPublicIp || 'false' }} \
               githubOidcClientId='${{ secrets.AZURE_CLIENT_ID }}'
        continue-on-error: true

      - name: Deploy Base (create / update)
        run: |
          az deployment group create \
            -g "$RESOURCE_GROUP" \
            -f infra/base/main.bicep \
            -p org=$ORG env=$ENV location=$LOCATION loc=$LOC uniqueSuffix=$UNIQUE_SUFFIX \
               adminUsername=agentadmin adminSshPublicKey='${{ secrets.ADMIN_SSH_PUBLIC_KEY }}' \
               adminPassword='${{ secrets.ADMIN_PASSWORD }}' \
               useGalleryImages=${{ github.event.inputs.useGalleryImages || 'false' }} \
               enableGhPublicIp=${{ github.event.inputs.enableGhPublicIp || 'false' }} \
               githubOidcClientId='${{ secrets.AZURE_CLIENT_ID }}'

      - name: Output Resources
        run: |
          az deployment group show -g "$RESOURCE_GROUP" -n main --query 'properties.outputs' -o json || true
          echo "Key Vault:" $(az keyvault list -g "$RESOURCE_GROUP" --query '[0].name' -o tsv)

      - name: Mask Sensitive Values
        if: always()
        run: |
          echo "::add-mask::${{ secrets.ADMIN_PASSWORD }}"

      - name: Post Summary
        run: |
          echo "### Base Infrastructure Deployment" >> $GITHUB_STEP_SUMMARY
          echo "Resource Group: $RESOURCE_GROUP" >> $GITHUB_STEP_SUMMARY
          echo "Location: $LOCATION" >> $GITHUB_STEP_SUMMARY
          echo "Use Gallery Images: ${{ github.event.inputs.useGalleryImages || 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "Public IP for GH Runner: ${{ github.event.inputs.enableGhPublicIp || 'false' }}" >> $GITHUB_STEP_SUMMARY
